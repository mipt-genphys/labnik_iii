%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 10.0
%%For: (\725\756\747\777\750\755) (\725\756\747\777\751\761\762\742\756)
%%Title: (1.eps)
%%CreationDate: 2/13/2005 9:17 PM
%%BoundingBox: 254 283 364 410
%%HiResBoundingBox: 254.7793 283.4648 363.25 409.8896
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: ArialMT.WinCyrillic
%%DocumentNeededFonts: ArialMT.WinCyrillic
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: 30 33 582 761
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595.2756 841.8898
%AI5_RulerUnits: 4
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI5_OpenToView: 177.5 409.3896 3 1002 659 18 0 1 11 68 1 0
%AI5_OpenViewLayers: 77
%%PageOrigin:30 33
%AI7_GridSettings: 56.6929 10 56.6929 10 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _ArialMT.WinCyrillic ArialMT.WinCyrillic
[/_ArialMT.WinCyrillic/ArialMT.WinCyrillic 0 0 0 TZ%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Black, White Radial)
(Black, White Radial) 1 2 Bd
[
<
000001010203040505060708090A0A0B0C0D0E101112131415161718191A1B1C1D1D1E1F20222324
252627282A2B2C2D2E2F3031323435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555658595A5B5D5E5F61626364666768696A6B6C6D6E6F70717172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A8A9A9AAAAABABACACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B2B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9B9BABABABABBBBBBBB
BCBCBCBDBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000001010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1A1B
1C1D1E1F1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616162636465666768
696A6A6B6C6D6D6E6F6F70717273747576767778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8E8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9A9AAAAAAAAABABABABABABAC
ACACACACACACACACADADADADADADADAD
>
<
00000001010202030304040506060708090A0A0B0C0D0E0F1011121213141516171718191A1B1C1D
1D1E1F20212222232425262728292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647494A4B4C4D4F50515253545556565758595A5B5C5D5E5E5F6061626364646566676768
696A6A6B6C6D6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919292929393949595969697979899999A9A9B9B9C9C
9D9D9E9E9F9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9A9AAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A7A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C5C7C8CACBCCCECFD0D2D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 0 %_Bs
0.749 0.6784 0.6706 0.902 0 0 0 2 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Copper )
(Copper ) 0 7 Bd
[
<
4D4C4D4C4D4C4C4C4C4C4B4C4B4C4C4C4C4C4C4C4C4C4C4C4C4C4C4B4B4B4B4B4B4B4B4B4B4A4A4A
4A4A4A4949494949484948484847474747464646464545454445444443434342424141414140403F
3E3E3D3D3C3D3B3B3A39393838373736363534343333313230302F2E2E2D2D2C2C2B2B2A29292828
26262524242323222221211F1E1E1D1D1B1B1A1A1918181717161615151413131212111110100F
>
<
BAB9B8B7B5B4B4B3B2B1B0AFAEACABAAABA9A8A7A6A5A3A2A1A09E9F9E9D9C9A9998979595959493
91918F8E8E8C8B8A8A89888786858483818081807E7D7C7B7A787876757574737271706F6D6C6B6A
6B696867666463626160605F5D5C5B5A585857555454535251504F4E4C4B4A4A4948474645444342
413F403F3E3D3C3B393937363735343332302F2E2D2C2B2B2A29282726252423222221201F1E1D
>
<
D3D2D0CFCECDCAC9C7C6C5C4C3C2C1BFBEBDBCBBB9B8B7B6B5B4B3B1B0AEADACABAAA9A8A7A5A4A3
A2A1A09F9D9C9B9A9897969594939291908F8D8C8B8A8988878685848281807F7E7C7B7A79787877
75747372706F6E6D6C6B6968666564636261605F5E5C5B5B5A5958575655545251504F4E4D4C4B4A
494846454443424141403F3E3C3B3A393837363534333331302F2F2E2D2C2B2B2A282727262524
>
<
3A39383737353534333231302F2E2D2D2B2B2A28282726252423232220201F1E1D1D1B1B1A191918
17161615141312121111100F0E0E0D0C0C0B0B0A0A09080807070606050505040404040303030202
02020201010101010000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
9596969797989899999A9B9B9C9C9D9D9E9E9FA0A0A1A1A2A2A3A3A4A5A5A6A6A7A7A8A8A9AAAAAB
ABACACADAEAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABBBBBCBDBDBEBEBFBFC0C0C1
C2C2C3C3C4C4C5C5C6C7C7C8C8C9C9CACACBCCCCCDCDCECECFCFD0D1D1D2D2D3D3D4D4D5D6D6D7D7
D8D8D9DADADBDBDCDCDDDDDEDFDFE0E0E1E1E2E2E3E4E4E5E5E6E6E7E7E8E9E9EAEAEBEBECECED
>
<
4F50515253545455565758595A5B5C5D5D5E5F60616263646566676768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283838485868788898A8B8C8D8D8E8F9091929394959697
9798999A9B9C9D9E9FA0A0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B3B4B5B6B7B8B9BABB
BCBDBDBEBFC0C1C2C3C4C5C6C6C7C8C9CACBCCCDCECFD0D0D1D2D3D4D5D6D7D8D9D9DADBDCDDDE
>
<
35363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C
5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828384
85868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC
ADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3
>
4 %_Br
<
5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5D5D5D5E5E5E5E5E5E5E5D5D5D5D5D5D5D5C5C5C5C5C5C
5C5C5C5C5B5C5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A59595959595859585859585858585757575756
5656565656555655545554555454545353535252525251525151505150504F4F4F4F4E4E4E4D4E4D
4D4D
>
<
C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C7C7C7C7C7C7C8C9C9C9C9C9C7C7C9C9C9C9C9C8
C8C8C8C8C9C7C8C8C8C9C9C7C8C8C8C7C7C7C8C6C7C7C7C7C7C7C8C6C7C7C6C7C7C6C6C7C5C6C6C5
C5C4C4C5C4C4C3C4C4C3C4C2C3C2C2C1C2C2C1C2C0C1C0BFBFBFBFBEBFBEBFBEBEBDBCBDBCBDBBBA
BBBA
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFEFFFDFBFCFBF8FAF8F6F5F5F4F1F0EEEFEEEBE9E7E6E4E5E3E1E0DEDCDAD8D7
D5D3
>
<
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7D7D7D7C7C7C7C7C7C7C7B7B7B7B7B7A7A797979797977
777777777676767675757574737373717171706F6F6E6E6C6C6C6B6B6A6969686866666565646462
6261605F5F5E5D5C5B5B5A59585757555454525151504E4E4D4B4A4A4947464545434241403E3E3D
3C3A
>
<
6666666666666666666666666666666666676767676767676767676868686868686869696969696A
6A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6E6E6E6F6F6F70707171717272737373747475757676777778
7879797A7A7B7B7C7D7D7E7E7F8080818282838484858686878889898A8B8C8D8D8E8F9091929293
9495
>
<
2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F30
3030303030313131313131323232323333333334343434353535353636363737373838383939393A
3A3B3B3B3C3C3D3D3D3E3E3F3F40404141414242434344454546464747484849494A4B4B4C4C4D4E
4E4F
>
<
00000000000000000000000000000000010101010101010101010202020202020303030303040404
0404050505050606060707070808080909090A0A0B0B0B0C0C0D0D0E0E0F0F101011111212131314
15151616171818191A1A1B1C1C1D1E1E1F2021212223242525262728292A2B2B2C2D2E2F30313233
3435
>
4 %_Br
<
4C4C4D4D4D4D4E4E4F4F4F5050505151515252535353545455565656575758585859595A5A5B5B5B
5B5C5C5C5D5E5E
>
<
B9BAB9BABBBCBBBCBDBEBDBEBFC0BFC0C0C1C0C1C2C3C2C2C2C2C3C3C4C3C4C5C6C5C5C6C7C6C6C7
C8C7C8C8C9C7C8
>
<
F5F7F9F8FAFCFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFF
>
<
3B3D3E3F40424344454748494B4C4D4F505253545657595A5D5E5F616264656668696B6D6E707173
757677797B7C7E
>
<
9594939291908F8E8D8C8B8A898887868584838281807F7E7C7B7A797877767574737271706F6E6D
6C6B6A69686766
>
<
4F4E4E4D4C4B4B4A494848474645454443424241403F3F3E3D3D3C3B3A3A39383737363534343332
3131302F2E2E2D
>
<
26252424232221201F1F1E1D1C1B1A1A1918171615151413121111100F0E0D0C0C0B0A0908070706
05040302020100
>
4 %_Br
<
00000000010102020202030303030404050506060707080809090A0A0B0B0C0C0D0D0E0E0F0F1010
111112121213131414151516161717181819191A1A1B1B1C1D1E1E1F1F2020222223232424252527
26282829292A2A2A2B2B2C2C2D2D2F2F30303131323233333434353536363737383839393B3B3C3C
3D3D3E3E3F3F3F3F4040414140414142424342434344444444454545454645464647464746474747
47474748474848484849484948494948494949494A494A4A4A4A4A4A4B4A4B4B4B4A4B4B4B4B4B4B
4B4B4B4B4C4B4C4B4C4B4C4B4C4B4C4C4C4C
>
<
00000000010202030304040606070708080A0A0A0B0C0D0F0E0F10121314131515171818181A1A1C
1B1C1D1F201F2122232425242526282828292A2B2C2C2D2E30313232333436373738393A3B3B3C3D
3E3F404041424345444546484848494B4C4D4D4E4F50515352545556575758595A5B5B5C5D5F6061
6162636566666668696A6A6B6C6D6F6E6F70727374737576777878797A7B7C7C7D7E7F8082818283
8585858688898A898B8C8D8E908F919293959496969899999A9B9C9E9D9E9FA1A2A3A3A4A5A7A8A8
A9AAABADACADAEB0B1B3B2B3B4B6B7B7B8B9
>
<
00000001010202030405050606070809090A0B0C0D0E0F0F11121313141517171819191B1C1C1D1E
1F202122222425262627282A2A2B2C2D2E2F3030313334353637383A3A3C3C3E3F40414243454546
4748494B4C4D4E4F5151535355565758595A5C5D5E5F6060626364656668696A6C6D6E6F71727374
767778797A7C7D7E7F80828384858688898A8B8C8D8F90929394959798999A9C9D9E9FA0A1A3A4A5
A6A7A9AAABACADAFB0B1B2B3B4B6B7B8B9BBBCBEBFC0C1C3C4C5C6C7C9CACBCCCECFD1D2D3D5D6D7
D9DADBDDDFE1E2E4E5E7E9EBECEEEFF2F3F5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000010101010101
0101020202020203030303040404050505060606070707080809090A0A0B0B0C0C0D0D0E0F101011
1212131414151616171818191A1B1B1B1C1D1D1E1F202121222324242526272729292A2B2C2C2E2E
2F2F3131323234343536373738383A3A3B3B
>
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECEC
EBEBEAEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8
D8D7D7D6D6D5D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5
C4C4C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1
B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E
9D9D9C9C9B9B9A9A99999898979796969595
>
<
FFFEFDFDFCFBFAF9F9F8F7F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E7E7E6E5E4E3E3E2E1E0DF
DFDEDDDCDBDBDAD9D8D7D6D6D5D4D3D2D2D1D0CFCECECDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BF
BEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B0B0AFAEADACABABAAA9A8A7A7A6A5A4A3A3A2A1A09F9E
9E9D9C9B9A9A9998979696959493929291908F8E8D8D8C8B8A898988878685858483828180807F7E
7D7C7C7B7A7978787776757473737271706F6F6E6D6C6B6B6A6968676766656463626261605F5E5E
5D5C5B5A5A5958575655555453525151504F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A29282726
>
4 %_Br
<
262625252324222222212120201F1F1F1E1D1C1C1B1B1A1919181817171716161515141414131312
1211111110100F0F0F0E0E0D0D0C0C0C0B0B0A0A0909090808070706060605050404030303030302
02020202010100000000
>
<
4443424241403F3E3E3D3C3B3B3A39383737363433323231302F2F2E2D2B2A2A2A28282626262423
242321201F201F1D1C1B1B1B191819171615141413121110100F0E0D0D0C0B0A0909080706050605
04030302020100000000
>
<
5352514F4E4E4D4C4A4948474645444342403F3E3D3C3B3A393836353434333131302F2E2D2C2B2B
2928272726232221201F1E1D1C1C1A1A19181816151514131211100F0D0D0C0B0A09080808070605
05040302020101000000
>
0
<
D9D9DADADBDBDCDCDCDDDDDEDEDFDFDFE0E0E1E1E2E2E2E3E3E4E4E5E5E5E6E6E7E7E8E8E8E9E9EA
EAEBEBEBECECEDEDEDEEEEEFEFF0F0F0F1F1F2F2F3F3F3F4F4F5F5F6F6F6F7F7F8F8F9F9F9FAFAFB
FBFCFCFCFDFDFEFEFFFF
>
<
B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C5C6C6C7C8C9CACACBCCCDCDCECFD0D1D1D2D3D4D5D5D6D7D8
D8D9DADBDCDCDDDEDFE0E0E1E2E3E3E4E5E6E7E7E8E9EAEBEBECEDEEEEEFF0F1F2F2F3F4F5F6F6F7
F8F9F9FAFBFCFDFDFEFF
>
<
A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC
CDCECFD0D1D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
<
40403F40403F403F3F403F3F403F3F3F3F3F3F3F3F3F3F3E3E3F3E3E3E3E3E3E3E3E3D3D3D3D3D3D
3D3D3C3C3D3C3C3C3C3C3C3C3C3B3B3B3B3B3B3B3B3A3B3B3B3B3B3B3B3A3B3B3A3B3B3A3A3B3A3A
3A3A3A393A3A393A3939393939393939393939383939383939383838383837383837373637373636
36363636353534343433333432323131313030302F2F2F2E2E2D2D2D2C2C2C2B2B2A2A2A29292928
282727272626
>
<
ECEBEAE9E9E8E7E7E6E4E4E4E3E2E1E0DFDDDEDDDBDBD9D9D7D6D7D5D4D3D2D1D0D0CFCECCCCCAC9
C9C8C7C6C4C3C2C2C1BFBEBDBBBABAB9B8B6B5B4B3B3B2B0AFAEACABAAAAA9A7A7A5A4A3A3A1A09F
9E9D9B9C9A9998969594949391908F8D8C8C8B8A8987868583848382807F7E7C7D7C7A7978767576
747372706F6E6E6D6B6A6967666665646261605F5F5E5C5B5A5957565755545351504F4F4E4D4B4A
494848474644
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFB
F9F7F6F4F2F0EEECEAE8E6E4E2E0DEDDDBD9D7D6D5D3D1D0CFCDCCCBC9C7C6C5C4C2C1C0BEBDBCBA
B9B8B7B5B4B3B2B0AFAEACABAAA8A7A6A5A3A2A1A09F9D9C9B9998979695949391908F8E8D8C8A89
888685848382807F7E7C7B7A79777675747271706E6D6C6B6A696867656564636261605E5D5C5B5A
595856555453
>
<
3B3B3A3A39383837373635353534333232323130302F2F2D2D2D2C2B2B2A2A2A2929282828262626
252524242422222221212120201E1E1E1D1D1D1C1C1B1B1A19191918181716161515151413131212
1111100F0F0F0E0E0D0D0D0C0C0B0A0A0A0909080808070707060605050505040404040303030303
02020202020202010101010101010101010000000000000000000000000000000000000000000000
000000000000
>
<
9C9C9D9D9D9E9E9F9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A7A8A8A9A9A9AAAAAA
ABABACACACADADADAEAEAEAFAFB0B0B0B1B1B1B2B2B3B3B3B4B4B4B5B5B6B6B6B7B7B7B8B8B8B9B9
BABABABBBBBBBCBCBDBDBDBEBEBEBFBFBFC0C0C1C1C1C2C2C2C3C3C4C4C4C5C5C5C6C6C7C7C7C8C8
C8C9C9C9CACACBCBCBCCCCCCCDCDCECECECFCFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D6D7
D7D8D8D8D9D9
>
<
2B2C2D2E2E2F30313233343435363738393A3A3B3C3D3E3F4041414243444546474748494A4B4C4D
4D4E4F5051525353545556575859595A5B5C5D5E5F5F60616263646566666768696A6B6C6C6D6E6F
7071727273747576777878797A7B7C7D7E7E7F80818283848585868788898A8B8B8C8D8E8F909191
9293949596979798999A9B9C9D9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B0B1B2B3B4
B5B6B6B7B8B9
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5
>
4 %_Br
[
0.0588 0.1137 0.1412 0 0.9294 0.8706 0.8275 2 50 100 %_Bs
0.302 0.7294 0.8275 0.2275 0.5843 0.3098 0.2078 2 50 85 %_Bs
0.3686 0.7843 1 0.4941 0.4 0.1765 0 2 73.9136 75 %_Bs
0.298 0.7255 0.9608 0.2314 0.5843 0.3098 0.149 2 50 63 %_Bs
0 0 0 0 1 1 1 2 50 34 %_Bs
0.149 0.2667 0.3255 0 0.851 0.7255 0.6471 2 50 14 %_Bs
0.251 0.9255 1 0.2314 0.6118 0.1686 0 2 50 2 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Nova)
(Nova) 1 3 Bd
[
<
100F0F0F0E0E0D0D0C0C0B0B0A0A0909090808070707070606060505050505050505050404040404
04030303030303030202020201010101010101010101010101010100000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000
>
<
000000000000000000000000000000000001020304050708090A0B0D0E10101113141618191B1C1D
1F202223252628292A2C2C2D2F303233343637393A3C3D3F3F4142444547484A4B4D4E4F4F515253
555657595A5B5B5D5E6061626465656768696B6C6D6F6F70717374767777797A7B7D7E8080818384
858788888A8B8C8E8F8F91929395959698999B9C9C9E9FA1A2A2A3A5A6A7A7A9AAABACACADAFB0B0
B1B2B3B5B5B6B7B8B8BABBBCBCBDBEC0C0C1C2C3C3C4C5C6C6C7C8C9C9CACBCCCCCDCECECFD0D1D1
D2D3D3D4D5D5D6D6D7D7D8D9D9DADBDBDCDDDDDDDEDEDFE0E0E0E1E1E2E3E3E3E4E4E5E5E5E6E6E7
E7E7E8E9E9E9E9EAEBEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F0F1F1F1F2F2F3F3F3F3F4F4
F4F4F5F5F5F5F5F6F6F6F6F7F7F7F7F8F8F8F8F8F8F8F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFB
FBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFD
>
<
F6F5F3F1F0EFEEEEEDEDEDEDEDEEEFF1F3F5F7F9FAFBFBFCFCFCFDFDFDFDFDFDFDFDFEFEFEFEFEFE
FFFFFFFFFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFF
>
0
1
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B7B6B5B4
B3B2B1B0AFAEAEADACABAAA9A8A7A7A6A5A4A3A2A1A0A09F9E9D9C9B9A9A99989796959494939291
908F8E8E8D8C8B8A898988878685858483828180807F7E7D7C7C7B7A797878777675747473727171
706F6E6D6D6C6B6A6A696867676665646463626161605F5E5E5D5C5B5B5A59585857565655545353
525151504F4F4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A393938
373736353534343332323131302F2F2E2E2D2C2C2B2B2A2929282827272626252424232322222121
20201F1E1E1D1D1C1C1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0E
0D0D0C0C0C0B0B0A0A0A090909080808070707060606050505040404040303030302020202010101
0101010000000000
>
0
4 %_Br
<
0000000000000000000000000000000000000102030405060708090A0B0C0D0E1011121314151516
1718191A1B1C1D1E1F1F20212223242526272728292A2A2B2C2C2D2E2E2F30313132333435353637
3838393A3B3C3D3E3F4041424344464648494A4B4D4E505052545556585A5B5D5F62636567696B6D
6F727375787A7C7E818485888A8C8F919495989A9D9EA1A3A5A6A9ABADAEB0B2B4B6B7B9BABCBEC0
C1C3C5C6C8C9CBCCCECFD1D2D3D4D6D7D8DADBDCDDDE
>
<
FDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFEFCFCFBF9FAF8F5F3F3EFECE9E8E4E0DEDEDBD8D6D5D2CFCCCBC9C6C4C3C1BEBD
BAB7B4B4B1AEABAAA7A4A1A09D9A979693908D8C898682827F7C7B787573726F6D6A6A6866636360
5E5C5C5A585656545250504F4D4D4C4B4949474645444341403F3E3C3B3B39383736353434323130
302E2D2C2C2A2928282625232322201F1F1E1C1A1A18
>
<
00000000000000000000000000000000000000000000000101010101010202020202030303030404
04040505060607070809090A0A0B0B0C0D0E0E0F1011121213141516171819191A1B1C1C1D1E1F20
202122232425252627272829292A2A2B2C2C2C2D2E2E2E2F2F2F3030302F3030302F30302F2F2F2F
2E2E2E2E2D2D2D2D2C2B2B2A292928272627262524242322212221201F1F1E1D1C1C1B1A1B1A1917
181716151514131212111110100F0F0E0E0D0C0C0C0C
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A
>
<
00000000000101010101010101010202020202020202020303030303030303030404040404040404
04050505050505050505060606060606060606070707070707070707080808080808080808090909
0909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D
0D0D0D0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F10101010101010101011111111111111111112
12121212121212121313131313131313131414141414
>
<
000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151516171818191A1B1B1C1D
1E1E1F20212122232424252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3A
3B3C3D3D3E3F40404142434344454646474849494A4B4C4C4D4E4E4F505151525354545556575758
595A5A5B5C5D5D5E5F60606162626364656566676868696A6B6B6C6D6E6E6F707171727373747576
76777879797A7B7C7C7D7E7F7F808182828384858586
>
4 %_Br
[
0.0627 0 0.9647 0 1 1 0 2 38.2022 0 %_Bs
0 0.9922 1 0 1 0 0 2 50 75.2809 %_Bs
0.8706 1 0.0941 0.0471 0.2902 0.0784 0.5255 2 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (RGB Rainbow)
(RGB Rainbow) 0 6 Bd
[
<
E1E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0E0E0DFDFDFDFDFDFDEDEDEDEDEDDDDDDDDDDDCDCDCDBDBDB
DBDADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCECECDCDCCCCCBCB
CACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBEBEBDBDBCBCBBBABAB9B9B8B7B7B6B6B5
B4B4B3B2B2B1B0B0AFAEAEADACACABAAAAA9A8A7A7A6A5A4A4A3A2A1A1A09F9F9E9D9C9C9B9A9999
98979696959493929291908F8E8E8D8C8B8A8989888786858483838281807F7E7D7C7C7B7A797877
7676757473727170706F6E6D6C6B6A6A69686766656463626261605F5E5D5C5B5A5A595857565554
54535251504F4E4D4C4B4A4948474644
>
<
C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5
C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6
C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9
C9C9C9C9C9C9CACACACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCC
CCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCF
CFD0D0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2D2D2D2
D2D2D2D2D2D2D2D2D1D1D1D1D1D1D0D0
>
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202
>
1
4 %_Br
<
8484858585868686878787878888888889898A8A8A8B8C8C8D8D8E8F909191929393949495969697
9899999A9B9C9D9D9E9F9FA0A0A0A1A1A1A1A1A1A1A1A1A1A1A1A1A2A2A2A3A3A4A4A5A5A6A6A7A7
A8A8A8A9A9AAAAAAABABACACADADAEAFAFB0B0B1B1B2B3B4B4B5B6B6B7B8B9BABABBBCBCBDBEBEBF
C0C1C1C2C2C3C3C4C4C5C5C6C6C7C7C7C8C8C9C9CACACBCBCBCCCCCDCDCDCECECECFCFCFD0D0D0D1
D1D1D2D2D2D2D3D3D3D3D3D4D4D4D5D5D5D6D6D6D6D7D7D7D7D7D8D8D8D8D9D9D9DADADADADADADB
DBDBDBDBDBDCDCDCDCDCDCDDDDDDDDDDDDDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFDFE0E0E0E0E0E0E0
E0E0E1E1E1E1E1E1E1E1E1E1E1E1E1E1
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000001030506080A0C0E1012141517191B1D1F20222426282A2C
2E30323436383A3C3E3F41434547494A4C4E5051535557595B5D5E6062636567686A6C6D6F717274
7677797A7B7D7E80818283858687898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2
A2A3A4A5A6A7A8A8A9AAAAABABACADADAEAEAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B7B8B8B9B9B9BA
BABABBBBBBBCBCBCBDBDBDBEBEBEBEBFBFBFBFC0C0C0C0C0C1C1C1C1C1C1C2C2C2C2C2C2C2C3C3C3
C3C3C3C3C3C3C3C4C4C4C4C4C4C4C4C4
>
<
201F1F1E1E1D1C1C1B1B1A19191818171716161515141313121111100F0F0E0E0D0C0B0A0A090807
06050504030201010000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
0
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
4 %_Br
<
A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A09F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9E
9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9C9C9B
9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A9999999999999999999898989898989898989797979797
97979797979696969696969696959595959595959595949494949494949493939393939393939292
929292929291919191919191909090909090908F8F8F8F8F8F8F8E8E8E8E8E8E8E8E8E8D8D8D8D8D
8D8D8D8C8C8C8C8C8B8B8B8B8B8B8B8B8A8A8A8A8A8A8A8989898989898988888888878787868686
86858585858585858585858585848484
>
0
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFCFAF9F7F5F3F1EFEDEBE9E7E5E3E2E0DFDEDCDBDAD9D7D6D5
D3D2D1CFCECCCBC9C8C6C4C3C2C1BFBEBDBBBAB9B8B6B5B4B2B1AFAEACABAAA8A7A5A4A3A1A09F9D
9C9A999796949392908F8D8C8A898786858382807F7E7C7B79787675747271706F6D6C6B69686766
646362605F5E5D5C5A59585655545352504F4E4D4B4A48474645434241403F3D3C3B3A3837363433
32302F2E2D2C2B292827262524222120
>
0
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101
>
1
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
<
101112131415161718191A1B1C1D1E1F20202122232425262728292A2B2C2D2E2E2F303132333435
363738393A3B3C3C3D3E3F40414243444546464748494A4B4C4C4D4E4F5050515253535455565757
58595A5B5B5C5D5E5E5F6060616262636464656666676868696A6B6B6C6D6D6E6F6F707171727373
7475757677777878797A7A7B7B7C7D7D7E7E7F7F808181828283838484858686878787888889898A
8A8B8B8C8C8D8D8D8E8E8F8F8F909090919192929293939394949494959595969696979797979898
9898999999999A9A9A9A9B9B9B9B9B9C9C9C9C9C9D9D9D9D9D9D9E9E9E9E9E9E9E9E9F9F9F9F9F9F
9F9F9F9F9F9FA0A0A0A0A0A0A0A0A0A0
>
0
<
F6F7F7F8F8F9F9FAFBFCFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
4 %_Br
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000101010101010101
01010101010102020203030303030303040404040404050505050505050506060607070707080809
09090A0A0B0B0C0C0D0D0E0E0F0F0F10
>
<
FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F4F4F3F3F2F1F1F0
F0EFEFEEEEEDEDECECEBEBEAE9E9E8E7E7E6E5E5E4E3E3E2E1E0E0DFDEDDDDDCDBDAD9D8D7D6D6D5
D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BEBDBCBBBAB8B7B6B5B3B2B1B0AFADACABAAA9
A7A6A5A3A2A19F9E9C9B999896959392918F8E8C8B8A888785848381807E7D7B7A79777674737170
6F6D6C6B69686765646261605E5D5B5A595756555352514F4E4D4B4A4847454442413F3D3C3A3937
36343332302F2D2C2A292826252322201F1D1C1B191816141311100E0D0B0A090807050403020100
00000000000000000000000000000000
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFEFEFEFEFEFEFEFEFFFFFFFFFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFCFBFBFAF9F7F5F3
F1EFEEEDEDEDEDEDEEEEEFF0F1F3F5F6
>
0
1
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
4 %_Br
[
0.2667 0.8157 0 0 1 0.0078 1 2 50 100 %_Bs
0.8824 0.7686 0 0 0 0 1 2 50 80 %_Bs
0.5176 0 0.1255 0 0.0039 1 1 2 50 60 %_Bs
0.6275 0 1 0 0 1 0 2 50 40 %_Bs
0.0627 0 0.9647 0 1 1 0 2 50 20 %_Bs
0 0.9922 1 0 1 0 0 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Tropical Sunset)
(Tropical Sunset) 0 5 Bd
[
0
<
FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAF9F9F9F9F8F8F8F7F7F6F6F5F5F5F4F4F3F3F3F2F1
F1F0F0EFEFEEEEEEEDEDECECEBEBEAEAE9E9E8E7E7E7E6E5E5E4E3E3E3E2E1E0E0E0DFDEDDDDDDDC
DBDAD9D9D8D7D6D6D6D5D4D3D3D2D1D0D0CFCECDCDCCCBCACAC9C8C8C7C6C5C5C4C3C3C2C1C1C0BE
BEBDBCBCBBBABAB8B7B7B6B5B5B3B2B2B1B1B0AFAFADADACABABAAAAA9A7A7A6A6A5A5A3A3A2A1A1
9F9F9E9E9C9C9B9B9999989896969595939392929191918F8F8E8E8C8C8C8B8B8A8A8A8888878787
858585848484838383818181808080807E7E7E7D7D7D7D7D7B7B7B7B7B7A7A7A7A7A7A7979797979
7979
>
1
0
1
<
000102030405060708090A0B0C0D0E0F10111213141515161718191A1B1C1D1E1F20212222232425
262728292A2B2B2C2D2E2F3031323333343536373838393A3B3C3D3E3E3F40414242434445464647
48494A4A4B4C4D4E4E4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061616263636465
656667676869696A6B6B6C6D6D6E6F6F70707172727373747575767677787879797A7A7B7B7C7D7D
7E7E7F7F8080818182828383848485858686878788888889898A8A8B8B8B8C8C8D8D8D8E8E8F8F8F
90909091919192929293939394949494959595969696969697979797979898989898989999999999
9999
>
0
4 %_Br
<
100F0F0F0E0E0D0D0C0C0B0B0A0A0909090808070707070606060505050505050505040404040404
03030303030303020202010101010101010101010101010100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
<
000000000000000000000000000000000001020304050708090A0B0D0E101113141618191B1C1D1F
202223252628292A2C2D2F303233343637393A3C3D3F4142444547484A4B4D4E4F51525355565759
5A5B5D5E60616264656768696B6C6D6F707173747677797A7B7D7E808183848587888A8B8C8E8F91
9293959698999B9C9E9FA1A2A3A5A6A7A9AAABACADAFB0B1B2B3B5B6B7B8BABBBCBDBEC0C1C2C3C4
C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D6D7D8D9DADBDCDDDDDEDFE0E0E1E2E3E3E4E5E5E6E7
E7E8E9E9EAEBEBECECEDEDEEEEEFEFF0F0F1F1F2F3F3F4F4F5F5F5F6F6F7F7F8F8F8F9F9F9FAFAFA
FAFBFBFBFBFBFCFCFCFCFCFDFDFDFDFD
>
<
F6F5F3F1F0EFEEEEEDEDEDEDEDEEEFF1F3F5F7F9FAFBFBFCFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFF
FFFFFFFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
0
1
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
4 %_Br
<
31302F2E2E2D2C2B2A2A2928282726252424222221201F1E1D1C1B1B1A191817161514131211100F
0E0D0D0C0B0A09080706050403020101000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000001010101010101010101020202020202020203030304040404
0404040505050505050505050505050606060606070707070707080808080909090A0A0A0B0B0B0B
0C0C0C0D0D0D0E0E0E0E0F0F0F0F0F10
>
<
A1A1A1A0A1A09FA09FA09F9E9F9E9E9E9D9E9D9D9D9C9C9C9C9B9A9B9A9A9A999999999898989898
979797969796969695969594959495949494949494939493939291918F8F8E8D8C8B8B8988888787
85848482838180807F7F7D7C7B7A7A787777757574727270706F6D6D6C6C6A696967676564646362
6160605E5E5D5C5B5A5A585757555554525251514F4E4E4C4C4B494947474644444343413F3F3E3E
3C3B3B3939383736353533323230302E2D2D2B2B2A282827272524242222211F1F1E1E1C1A1A1919
17161614141211110F0F0D0C0C0B0B09080807070604040303020101000000000000000000000000
00000000000000000000000000000000
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000002030507080A0C0F12131618
1B1D1F222426292B2D2F323536393B3E414345474A4D4E51535557595B5D60626466686A6C6E7072
7577797B7D7F81838687898B8D8F9092949698999B9E9FA1A3A5A6A7A8AAABACAEAFB0B2B3B5B6B7
B8BABBBCBDBFC0C1C3C4C5C6C7C8C9CACBCDCECFD0D1D2D3D4D5D5D6D7D8D9D9DADBDBDCDDDDDFDF
E1E2E3E4E5E6E7E8E9EAEBEBECECEDEEEEEFEFF0F0F0F1F0F1F0EFEFEEEEECEBEBEAEAE9E9E9E9E9
EAEAEAEBEBECEDEDEEEFF0F2F2F4F4F6
>
0
1
<
6667676868696A6A6B6B6C6D6D6E6E6F70707171727373747475767677777879797A7A7B7C7C7D7D
7E7F7F80808182828383848585868687888889898A8B8B8C8C8D8E8E8F8F90919192929394949595
9697979898999A9A9B9B9C9D9D9E9E9FA0A0A1A1A2A3A3A4A4A5A6A6A7A7A8A9A9AAAAABACACADAD
AEAFAFB0B0B1B2B2B3B3B4B5B5B6B6B7B8B8B9B9BABBBBBCBCBDBEBEBFBFC0C1C1C2C2C3C4C4C5C5
C6C7C7C8C8C9CACACBCBCCCDCDCECECFD0D0D1D1D2D3D3D4D4D5D6D6D7D7D8D9D9DADADBDCDCDDDD
DEDFDFE0E0E1E2E2E3E3E4E5E5E6E6E7E8E8E9E9EAEBEBECECEDEEEEEFEFF0F1F1F2F2F3F4F4F5F5
F6F7F7F8F8F9FAFAFBFBFCFDFDFEFEFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
<
84848485858585858585868686868686868686868686868686868787878787878788878888888888
8889898989898A8A8A8A8A8B8B8B8B8C8C8C8C8C8C8D8C8D8D8D8D8D8D8D8D8D8D8D8D8D8D8C8C8B
8B8B8A8A898988888887868685858483838282818180807F7E7E7E7D7C7C7B7B7A7A797978787776
76767574747373727170706F6F6E6D6D6D6C6B6A6A69686867676766666565646463626262626261
6161616160606060605F5F5F5F5F5E5E5E5D5D5C5C5C5B5B5A5A5A59595858585757565656555554
54535252515151504F4F4E4E4D4D4C4C4B4A4A4949484747464645444443424241403F3F3E3E3D3C
3C3B3A3A393838373635353433323131
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000101020304060608080A0C0C0E0F1113131515181A1A1C1D1E2021222324262728292A2C2C2E2E
303132333335373739393A3C3C3E3E40424244444648484A4A4C4D4E4F5051535455565859595B5B
5D5E5E6060616363646466676769696A6B6B6C6C6D6F6F7070717373747475777778787A7B7B7C7C
7E7F7F8080818383848485868687878889898A8A8B8D8D8E8E8F9090929293949495959697979898
999A9A9B9B9C9D9D9E9E9FA0A0A1A0A1
>
<
201F1F1F1F1E1E1E1D1D1C1C1C1B1B1A1A1A19191918181817171616161615141414141312121211
1110100F0F0F0E0E0D0D0C0B0B0B0A0A090808070706060505040303020201000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFEFEFDFDFCFBFBFAFAF9F8F8F7F7F6F5F5F4F4F3F2F2F1F1F0EFEFEEEEEDECECEBEBEAE9E9E8E8
E7E6E6E5E5E4E3E3E2E2E1E0E0DFDFDEDDDDDCDCDBDADAD9D9D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0
CFCECECDCDCCCBCBCACAC9C8C8C7C7C6C5C5C4C4C3C2C2C1C1C0BFBFBEBEBDBCBCBBBBBAB9B9B8B8
B7B6B6B5B5B4B3B3B2B2B1B0B0AFAFAEADADACACABAAAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A0
9F9E9E9D9D9C9B9B9A9A999898979796959594949392929191908F8F8E8E8D8C8C8B8B8A89898888
878686858584838382828180807F7F7E7D7D7C7C7B7A7A7979787777767675747473737271717070
6F6E6E6D6D6C6B6B6A6A696868676766
>
1
4 %_Br
[
0 0.4745 1 0 1 0.6 0 2 50 100 %_Bs
0 0.9922 1 0 1 0 0 2 35.5263 57.3034 %_Bs
0.0627 0 0.9647 0 1 1 0 2 50 55.618 %_Bs
0.1922 0.6314 0 0 1 0.4 1 2 50 44.9438 %_Bs
0.5176 0 0.1255 0 0 1 1 2 50 19.1011 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 16)
(Unnamed gradient 16) 0 5 Bd
[
<
0304030405060606070808090A0A0B0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D
1E1F2020212222232324242526262627282828292A2A2A2B2C2C2D2D2D2E2E2F2F30303131313232
323333333434353535363636373737383839393939393A3A3B3B3B3C3C3C3C3D3C3D3D3E3D3E3E3F
3F3F3F3F3F4040404041414141414141424242424343434444444445454545454646464646464747
4748484848494949494A4A4A4A4B4B4B4B4C4C4C4D4D4D4E4E4F4E4F
>
<
48494B4C4D4E4F5051525354555758595A5B5C5D5E6061626364656668696A6B6C6D6E7071727375
767778797A7B7D7E7F80828384858687888A8B8C8D8F9091929394959798999A9C9D9E9FA0A1A2A4
A5A6A7A8A9AAABACAEAFB0B1B2B3B5B6B6B7B9BABBBCBDBEBFC1C2C3C4C5C6C7C8C9CACBCDCECFCF
D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F5F6F6
F7F7F8F8F9F9FAFBFCFCFDFEFEFEFEFFFEFEFFFFFFFFFFFFFFFFFFFF
>
1
<
00000000000000000000000000000000000000000000000000000000000000000000000001010101
01010102020202020303030304040404040505060606070708080809090A0B0B0B0C0D0D0E0E0F0F
1011121213141515161617171819191A1B1C1C1D1E1E2021222223242525262728292A2B2B2C2D2E
2F30313133343535363839393A3C3C3D3E3F3F41424343444545474849494B4C4D4D4E5050515354
54565758595A5B5B5D5E5F5F61626464656767686A6B6B6D6E707071
>
<
FCFBFBFAF9F8F8F7F6F5F5F4F3F3F2F1F0F0EFEEEDEDECEBEBEAE9E8E8E7E6E5E5E4E3E3E2E1E0E0
DFDEDDDDDCDBDBDAD9D8D8D7D6D5D5D4D3D3D2D1D0D0CFCECDCDCCCBCBCAC9C8C8C7C6C5C5C4C3C3
C2C1C0C0BFBEBDBDBCBBBBBAB9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABABAAA9A8A8A7A6A5
A5A4A3A3A2A1A0A09F9E9D9D9C9B9B9A99989897969595949393929190908F8E8D8D8C8B8B8A8988
8887868585848383828180807F7E7D7D7C7B7B7A7978787776757574
>
<
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594
939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C
1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
0
4 %_Br
<
4F4E4F4E4E4D4D4D4C4C4C4B4B4B4B4A4A4A4A494949494848484847474746464646464645454545
45444444444343434242424241414141414141404040403F3F3F3F3F3F3E3E3D3E3D3D3C3D3C3C3C
3C3B3B3B3A3A39393939393838373737363636353535343433333332323231313130302F2F2E2E2D
2D2D2C2C2B2A2A2A2928282827262626252424232322222120201F1E1D1D1C1B1A1A191818171615
15141312121110100F0E0D0D0C0B0A0A090808070606060504030403
>
<
FFFFFFFFFFFFFFFFFFFFFEFEFFFEFEFEFEFDFCFCFBFAF9F9F8F8F7F7F6F6F5F5F4F3F2F1F0EFEEED
ECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1CFCFCECDCBCAC9C8C7C6C5C4
C3C2C1BFBEBDBCBBBAB9B7B6B6B5B3B2B1B0AFAEACABAAA9A8A7A6A5A4A2A1A09F9E9D9C9A999897
9594939291908F8D8C8B8A88878685848382807F7E7D7B7A7978777675737271706E6D6C6B6A6968
666564636261605E5D5C5B5A5958575554535251504F4E4D4C4B4948
>
1
<
7170706E6D6B6B6A68676765646462615F5F5E5D5B5B5A595857565454535150504E4D4D4C4B4949
4847454544434342413F3F3E3D3C3C3A39393836353534333131302F2E2D2C2B2B2A292827262525
2423222221201E1E1D1C1C1B1A1919181717161615151413121211100F0F0E0E0D0D0C0B0B0B0A09
09080808070706060605050404040404030303030202020202010101010101010000000000000000
00000000000000000000000000000000000000000000000000000000
>
<
74757576777878797A7B7B7C7D7D7E7F80808182838384858586878888898A8B8B8C8D8D8E8F9090
9192939394959596979898999A9B9B9C9D9D9E9FA0A0A1A2A3A3A4A5A5A6A7A8A8A9AAABABACADAD
AEAFB0B0B1B2B3B3B4B5B5B6B7B8B8B9BABBBBBCBDBDBEBFC0C0C1C2C3C3C4C5C5C6C7C8C8C9CACB
CBCCCDCDCECFD0D0D1D2D3D3D4D5D5D6D7D8D8D9DADBDBDCDDDDDEDFE0E0E1E2E3E3E4E5E5E6E7E8
E8E9EAEBEBECEDEDEEEFF0F0F1F2F3F3F4F5F5F6F7F8F8F9FAFBFBFC
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABB
>
0
4 %_Br
<
0304030405060606070808090A0A0B0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D
1E1F2020212222232324242526262627282828292A2A2A2B2C2C2D2D2D2E2E2F2F30303131313232
323333333434353535363636373737383839393939393A3A3B3B3B3C3C3C3C3D3C3D3D3E3D3E3E3F
3F3F3F3F3F4040404041414141414141424242424343434444444445454545454646464646464747
4748484848494949494A4A4A4A4B4B4B4B4C4C4C4D4D4D4E4E4F4E4F
>
<
48494B4C4D4E4F5051525354555758595A5B5C5D5E6061626364656668696A6B6C6D6E7071727375
767778797A7B7D7E7F80828384858687888A8B8C8D8F9091929394959798999A9C9D9E9FA0A1A2A4
A5A6A7A8A9AAABACAEAFB0B1B2B3B5B6B6B7B9BABBBCBDBEBFC1C2C3C4C5C6C7C8C9CACBCDCECFCF
D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F5F6F6
F7F7F8F8F9F9FAFBFCFCFDFEFEFEFEFFFEFEFFFFFFFFFFFFFFFFFFFF
>
1
<
00000000000000000000000000000000000000000000000000000000000000000000000001010101
01010102020202020303030304040404040505060606070708080809090A0B0B0B0C0D0D0E0E0F0F
1011121213141515161617171819191A1B1C1C1D1E1E2021222223242525262728292A2B2B2C2D2E
2F30313133343535363839393A3C3C3D3E3F3F41424343444545474849494B4C4D4D4E5050515354
54565758595A5B5B5D5E5F5F61626464656767686A6B6B6D6E707071
>
<
FCFBFBFAF9F8F8F7F6F5F5F4F3F3F2F1F0F0EFEEEDEDECEBEBEAE9E8E8E7E6E5E5E4E3E3E2E1E0E0
DFDEDDDDDCDBDBDAD9D8D8D7D6D5D5D4D3D3D2D1D0D0CFCECDCDCCCBCBCAC9C8C8C7C6C5C5C4C3C3
C2C1C0C0BFBEBDBDBCBBBBBAB9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABABAAA9A8A8A7A6A5
A5A4A3A3A2A1A0A09F9E9D9D9C9B9B9A99989897969595949393929190908F8E8D8D8C8B8B8A8988
8887868585848383828180807F7E7D7D7C7B7B7A7978787776757574
>
<
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594
939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C
1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
0
4 %_Br
<
4F4E4F4E4E4D4D4D4C4C4C4B4B4B4B4A4A4A4A494949494848484847474746464646464645454545
45444444444343434242424241414141414141404040403F3F3F3F3F3F3E3E3D3E3D3D3C3D3C3C3C
3C3B3B3B3A3A39393939393838373737363636353535343433333332323231313130302F2F2E2E2D
2D2D2C2C2B2A2A2A2928282827262626252424232322222120201F1E1D1D1C1B1A1A191818171615
15141312121110100F0E0D0D0C0B0A0A090808070606060504030403
>
<
FFFFFFFFFFFFFFFFFFFFFEFEFFFEFEFEFEFDFCFCFBFAF9F9F8F8F7F7F6F6F5F5F4F3F2F1F0EFEEED
ECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1CFCFCECDCBCAC9C8C7C6C5C4
C3C2C1BFBEBDBCBBBAB9B7B6B6B5B3B2B1B0AFAEACABAAA9A8A7A6A5A4A2A1A09F9E9D9C9A999897
9594939291908F8D8C8B8A88878685848382807F7E7D7B7A7978777675737271706E6D6C6B6A6968
666564636261605E5D5C5B5A5958575554535251504F4E4D4C4B4948
>
1
<
7170706E6D6B6B6A68676765646462615F5F5E5D5B5B5A595857565454535150504E4D4D4C4B4949
4847454544434342413F3F3E3D3C3C3A39393836353534333131302F2E2D2C2B2B2A292827262525
2423222221201E1E1D1C1C1B1A1919181717161615151413121211100F0F0E0E0D0D0C0B0B0B0A09
09080808070706060605050404040404030303030202020202010101010101010000000000000000
00000000000000000000000000000000000000000000000000000000
>
<
74757576777878797A7B7B7C7D7D7E7F80808182838384858586878888898A8B8B8C8D8D8E8F9090
9192939394959596979898999A9B9B9C9D9D9E9FA0A0A1A2A3A3A4A5A5A6A7A8A8A9AAABABACADAD
AEAFB0B0B1B2B3B3B4B5B5B6B7B8B8B9BABBBBBCBDBDBEBFC0C0C1C2C3C3C4C5C5C6C7C8C8C9CACB
CBCCCDCDCECFD0D0D1D2D3D3D4D5D5D6D7D8D8D9DADBDBDCDDDDDEDFE0E0E1E2E3E3E4E5E5E6E7E8
E8E9EAEBEBECEDEDEEEFF0F0F1F2F3F3F4F5F5F6F7F8F8F9FAFBFBFC
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABB
>
0
4 %_Br
[
0.3098 1 1 0.4431 0.4549 0 0 2 50 100 %_Bs
0.0118 0.2824 1 0 0.9882 0.7333 0 2 50 78.0899 %_Bs
0.3098 1 1 0.4431 0.4549 0 0 2 50 53.9326 %_Bs
0.0118 0.2824 1 0 0.9882 0.7333 0 2 50 28.0899 %_Bs
0.3098 1 1 0.4431 0.4549 0 0 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 19)
(Unnamed gradient 19) 1 3 Bd
[
0.0667
0.0471
0.0471
0
0.9216
0.9216
0.9216
4 %_Br
<
1112131415161718191A1B1C1D1D1E1F1F20222324252627282A2B2B2C2D2E2F3031313234353637
3838393B3C3D3D3E3F40404143444545464748484A4B4B4C4D4E4E4F505052535354555556585859
5A5A5B5B5D5E5E5F6161626263636466666767686869696A6A6B6B6C6C6D6D6E6E6F6F7070717171
717272727373747475757576767777777878787979797A7A7A7B7B7B7C7C7C7D7D7D7D7E7E7E7E7F
7F7F7F80808080818181818182828282828282828282828283838383838383838383848484848484
8484848484848484
>
<
0C0D0D0E0F101011121314141516171818191A1A1B1C1D1E1F1F2020212223242526262728292A2B
2C2C2D2E2F3030313233333435353636373839393A3B3B3C3D3E3E3F404041424243444445464647
48484A4A4B4C4C4D4E4E4F4F505051525253535454555556565757585859595A5A5A5A5B5B5C5C5D
5D5E5E5E5F5F6060616161616162626263636364646465656566666667676768686868696969696A
6A6A6A6A6A6A6A6B6B6B6B6B6C6C6C6C6C6C6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6E6E6E6E6E6E
6E6E6E6E6E6E6E6E
>
<
0C0D0E0F101112121314151617171819191A1B1C1D1D1E1F202122222223242526272728292A2B2C
2D2D2E2F30313132333434353637383838393A3A3B3C3C3D3E3F3F40414142434344454546474749
4A4A4B4B4C4D4D4F5050515152525354545555565656565757585859595A5A5B5B5C5C5D5D5E5E5E
5E5F5F5F60606161626262636364646464646465656566666667676767676768686868696969696A
6A6A6A6A6A6A6A6B6B6B6B6B6C6C6C6C6C6C6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6E6E6E6E6E6E
6E6E6E6E6E6E6E6E
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000010101010101010101010102020202020202020303030303030303040404
040505050505060606060607070707070808080909090A0A0A0A0A0A0B0B0B0C0C0C0C0D0D0D0D0E
0E0E0E0F0F0F0F101010101010101010101011111111111112121212121212121212131313131313
1313131313131313
>
<
EBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCCCBCAC9C8C7
C6C6C5C4C3C2C2C1C0BFBFBEBDBCBBBBBAB9B8B8B7B6B6B5B4B3B3B2B1B1B0AFAFAEADADACABABAA
A9A9A8A8A7A6A6A5A4A4A3A3A2A2A1A0A09F9F9E9E9D9D9C9C9B9B9A9A9999989897979696959594
94939393929291919090908F8F8E8E8E8D8D8D8C8C8C8B8B8B8A8A8A898989888888888787878786
86868685858585848484848483838383838382828282828281818181818181818181808080808080
8080808080808080
>
<
EBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCCCBCAC9C8C7
C6C6C5C4C3C2C2C1C0BFBFBEBDBCBBBBBAB9B8B8B7B6B6B5B4B3B3B2B1B1B0AFAFAEADADACABABAA
A9A9A8A8A7A6A6A5A4A4A3A3A2A2A1A0A09F9F9E9E9D9D9C9C9B9B9A9A9999989897979696959594
94939393929291919090908F8F8E8E8E8D8D8D8C8C8C8B8B8B8A8A8A898989888888888787878786
86868685858585848484848483838383838382828282828281818181818181818181808080808080
8080808080808080
>
<
EBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCCCBCAC9C8C7
C6C6C5C4C3C2C2C1C0BFBFBEBDBCBBBBBAB9B8B8B7B6B6B5B4B3B3B2B1B1B0AFAFAEADADACABABAA
A9A9A8A8A7A6A6A5A4A4A3A3A2A2A1A0A09F9F9E9E9D9D9C9C9B9B9A9A9999989897979696959594
94939393929291919090908F8F8E8E8E8D8D8D8C8C8C8B8B8B8A8A8A898989888888888787878786
86868685858585848484848483838383838382828282828281818181818181818181808080808080
8080808080808080
>
4 %_Br
[
0.0667 0.0471 0.0471 0 0.9216 0.9216 0.9216 2 50 0 %_Bs
0.0667 0.0471 0.0471 0 0.9216 0.9216 0.9216 2 30 4 %_Bs
0.5176 0.4314 0.4314 0.0745 0.502 0.502 0.502 2 50 25.2809 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 1 4 Bd
[
<
31313131313131313132323232323232323234343434343535353535363636363637373737383838
383939393B3B3B3B3C3C3C3D3D3D3E3E3E3F3F40404041414143434444444545464646474748484A
4A4B4B4B4C4C4D4D4E4E4F4F5050525253535454555556585859595A5A5B5B5D5E5E5F5F61616263
6364646667676868696A6A6B6C6C6D6E6E6F707071717172737374757576777878797A7A7B7C7D7D
7E7F7F808182828283848484858687878889898A8A8B8C8D8E8E8F8F909192929293949595959697
9898999A9B9B9B9C9C9D9E9E9F9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A6A7A7A8A8A8A9A9AAAAABAB
ACACACADADAEAE
>
<
262626262626262626272727272727272727282828282829292929292A2A2A2A2A2B2B2B2B2C2C2C
2C2D2D2D2E2E2E2E2F2F2F303030313131323233333334343435353535353636373737383839393A
3A3B3B3B3C3C3D3D3E3E3F3F40404141424243434444454646474748484A4A4B4C4C4D4D4E4E4F50
5051515253535454555656575858595A5A5A5B5B5C5D5D5E5F5F6061616162636364656566676868
696A6A6A6B6C6D6D6D6E6F6F6F70717172737475757676777878797A7A7B7C7C7D7E7E7F80808181
8283838485858686878889898A8B8B8B8C8D8D8E8E8F909091929293939495959697979798989999
9A9A9B9B9C9C9D
>
<
27272727272727272728282828282828282829292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2D2D2D
2D2E2E2E2F2F2F2F30303031313132323233333434343535353636373737383838383839393A3A3B
3B3C3C3C3D3D3E3E3F3F40404141424243434444454546474749494A4A4B4B4C4D4D4F4F50505152
52535354555556565657575859595A5B5B5C5D5D5E5E5E5F60606162626364646465666667676868
696A6A6A6B6C6D6D6D6E6F6F6F707171727273747475757677777878797A7B7B7B7C7D7E7E7E7F80
818182838484848585868787888888898A8B8B8C8D8E8E8F8F909091919192929293939495959696
97979899999A9A
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000101
010101010101010102020202020203030303030304040405050506060607070808090A0A0A0B0C0C
0D0E0E0F10101111121314141516171718191A1B1B1C1D1E2020212224252727282A2B2C2E2E2F31
323335363838393B3D3E404143454546484A4C4D4F51535456585A5C5C5D5F61636567696B6D6F71
737577797C7E80
>
<
CCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACAC9C9C9C9C9C8C8C8C8C8C7C7C7C7C6C6C6
C6C5C5C5C4C4C4C4C3C3C3C2C2C2C1C1C1C0C0BFBFBFBEBEBEBDBDBCBCBCBBBBBABABAB9B9B8B8B7
B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACABABAAAAA9A9A8A8A7A6A6A5A5A4A4A3A2
A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969594949392929190908F8E8D8D8C8B8B8A898888
878686858483828281807F7F7E7D7C7C7B7A7978787776757474737271706F6F6E6D6C6B6A6A6968
6766656463636261605F5E5D5C5B5B5A595857565554535251504F4E4E4D4C4B4A49484746454443
4241403F3E3D3C
>
<
CCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACAC9C9C9C9C9C8C8C8C8C8C7C7C7C7C6C6C6
C6C5C5C5C4C4C4C4C3C3C3C2C2C2C1C1C1C0C0BFBFBFBEBEBEBDBDBCBCBCBBBBBABABAB9B9B8B8B7
B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACABABAAAAA9A9A8A8A7A6A6A5A5A4A4A3A2
A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969594949392929190908F8E8D8D8C8B8B8A898888
878686858483828281807F7F7E7D7C7C7B7A7978787776757474737271706F6F6E6D6C6B6A6A6968
6766656463636261605F5E5D5C5B5B5A595857565554535251504F4E4E4D4C4B4A49484746454443
4241403F3E3D3C
>
<
CCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACAC9C9C9C9C9C8C8C8C8C8C7C7C7C7C6C6C6
C6C5C5C5C4C4C4C4C3C3C3C2C2C2C1C1C1C0C0BFBFBFBEBEBEBDBDBCBCBCBBBBBABABAB9B9B8B8B7
B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACABABAAAAA9A9A8A8A7A6A6A5A5A4A4A3A2
A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969594949392929190908F8E8D8D8C8B8B8A898888
878686858483828281807F7F7E7D7C7C7B7A7978787776757474737271706F6F6E6D6C6B6A6A6968
6766656463636261605F5E5D5C5B5B5A595857565554535251504F4E4E4D4C4B4A49484746454443
4241403F3E3D3C
>
4 %_Br
<
AEAEAFAFB0B0B0B1B1B1B1B2B2B2B2B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8
>
<
9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9
>
<
9A9B9B9C9C9D9D9E9E9F9F9FA0A0A0A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5
>
<
80838587898C8E90939597999C9EA0A4A7A9ABADAFB1B3B5B7B9BBBDBEC0
>
<
3C3B3A393837363534333231302F2E2C2B2A292827262524232221201F1E
>
<
3C3B3A393837363534333231302F2E2C2B2A292827262524232221201F1E
>
<
3C3B3A393837363534333231302F2E2C2B2A292827262524232221201F1E
>
4 %_Br
<
B8B8B7B7B6B6B5B5B5B4B4B3B3B2B2B2B1B1B1B1B0B0B0AFAFAEAEADADACACACACABABAAAAA9A9A8
A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A0A0A09F9F9F9E9E9E9D9C9C9C9C9B9B9B9A9A9999
98989897979696959595959594949393929292929291919090908F8F8F8F8F8F8E8E8E8D8D8D8C8C
8C8C8B8B8B8B8A8A8A8A898989898989898989898888888888878787878787878686868686868686
85858585858585858585858484848484848484848484848484848484848484848484848484848484
84848484848484848484848484848484848484848484848484848484848484
>
<
A9A8A8A7A7A7A6A6A5A5A4A4A3A3A3A2A1A1A1A0A09F9F9E9E9D9D9C9B9B9A9A9A99999898979797
9695959594939292919190908F8E8E8E8D8D8D8C8B8B8B8A8A898989888787868686858584848383
8382828181818180807F7F7F7E7E7E7E7D7D7C7C7C7B7B7A7A7A7A7A7A7979797878787777777676
76767676767675757575747474747373737373737272727272717171717171717070707070707070
6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6E6E6E6E6E6E6E6E6E6E6E6E
6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E
>
<
A5A5A5A5A4A4A3A3A3A2A2A1A1A0A09F9F9F9E9E9D9D9C9C9B9B9A99999897979796969595949393
92929292919190908F8F8F8E8E8D8D8C8B8B8B8A8989888888878787868585858584848483838282
81818180807F7F7E7E7E7E7E7D7D7C7C7B7B7B7B7B7A7A7979797878787878787777777676767575
75757575757574747474737373737272727272727272727272717171717171717070707070707070
6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6E6E6E6E6E6E6E6E6E6E6E6E
6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E
>
<
C0BEBBB9B7B5B1AFADABA7A4A2A09E99979593908E8C89878583807C7977757573716F6D6B696765
63615F5F5D5C5A5856565453514F4F4D4C4A4A4846464543434140403E3D3D3B3B39383836363535
33323231312F2F2E2E2C2C2C2B2B2A2A282827272725252424242222222121212020201E1E1E1D1D
1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191919191818181818171717171717171616161616161616
15151515151515151515151414141414141414141414141414141414131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313
>
<
1E1F21222324262728292B2C2D2E2F3132333435363738393A3B3C3E3F4041414243444546474849
4A4B4C4C4D4E4F505151525354555556575858595A5A5B5C5C5D5E5E5F6060616162636364646565
666767686869696A6A6B6B6B6C6C6D6D6E6E6F6F6F70707171717272727373737474747575757676
76767777777778787878797979797A7A7A7A7A7A7B7B7B7B7B7C7C7C7C7C7C7C7D7D7D7D7D7D7D7D
7E7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F808080808080808080808080
80808080808080808080808080808080808080808080808080808080808080
>
<
1E1F21222324262728292B2C2D2E2F3132333435363738393A3B3C3E3F4041414243444546474849
4A4B4C4C4D4E4F505151525354555556575858595A5A5B5C5C5D5E5E5F6060616162636364646565
666767686869696A6A6B6B6B6C6C6D6D6E6E6F6F6F70707171717272727373737474747575757676
76767777777778787878797979797A7A7A7A7A7A7B7B7B7B7B7C7C7C7C7C7C7C7D7D7D7D7D7D7D7D
7E7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F808080808080808080808080
80808080808080808080808080808080808080808080808080808080808080
>
<
1E1F21222324262728292B2C2D2E2F3132333435363738393A3B3C3E3F4041414243444546474849
4A4B4C4C4D4E4F505151525354555556575858595A5A5B5C5C5D5E5E5F6060616162636364646565
666767686869696A6A6B6B6B6C6C6D6D6E6E6F6F6F70707171717272727373737474747575757676
76767777777778787878797979797A7A7A7A7A7A7B7B7B7B7B7C7C7C7C7C7C7C7D7D7D7D7D7D7D7D
7E7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F808080808080808080808080
80808080808080808080808080808080808080808080808080808080808080
>
4 %_Br
[
0.1922 0.149 0.1529 0 0.8 0.8 0.8 2 66.67 0 %_Bs
0.6824 0.6157 0.6039 0.502 0.2353 0.2353 0.2353 2 50 60 %_Bs
0.7216 0.6627 0.6471 0.7529 0.1176 0.1176 0.1176 2 20 60.5 %_Bs
0.5176 0.4314 0.4314 0.0745 0.502 0.502 0.502 2 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 81)
(Unnamed gradient 81) 1 4 Bd
[
<
00000101020304050506070809090A0B0C0D0E0E0F101112131415161718191A1B1C1D1E1F202122
23242526272728292A2A2B2C2D2E2F2F30313233343536363738393A3B3C3C3D3E3F404041414243
444546474849494A4B4C4D4E4F4F505151525354545556575859595A5A5B5C5D5E5E5F6061616262
6364656666676868696A6A6B6C6D6D6D6E6F707071727273737475757676777878797A7A7A7B7C7D
7D7D7E7F8080808182828283848484858686868687
>
<
00000000000000000000000000000000000000010000010101010001010101010101010101010102
02010202020202020203030203030203030303030403040403040405040405040405050605050606
050606060606060607060607060607070808080909080A09090A0A0C0B0B0C0C0B0C0C0D0D0D0E0E
0D0F0E0E0F0F1010101111101211111312121313131414141515141616171717181817191919181A
1A191B1B1A1C1C1B1D1D1D1E1E1E1D1F1F1F202020
>
0
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2
B1B0AFAEADACABAAA9A8A7A6A5A5A4A3A2A1A09F9E9D9C9B9A99999897969594939291908F8F8E8D
8C8B8A89888786868584838281807F7F7E7D7C7B7A7979787776757473737271706F6E6E6D6C6B6A
6A696867666665646363626160605F5E5D5D5C5C5B
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAEAE9E9E8E8E8E7E7E6E6E6E5E5E4E4E4E3E3E3E2E2E1E1E1E0E0
E0DFDFDEDEDEDDDDDCDCDCDBDBDBDADAD9D9D9D8D8D8D7D7D7D6D6D5D5D5D4D4D4D3D3D2D2D2D1D1
D1D0D0D0CFCFCECECECDCDCDCCCCCCCBCBCBCACACAC9C9C9C8C8C8C7C7C6C6C6C5C5C5C4C4C4C4C3
C3C3C2C2C2C1C1C1C0C0C0BFBFBFBFBEBEBEBDBDBD
>
1
4 %_Br
<
878888898A8A8B8C8C8D8E8E8F90919192939394959696979899999A9B9C9C9D9D9E9E9FA0A0A1A1
A2A2A2A3A4A4A5A6A6A7A7A8A9A9AAAAABABACACADADAEAFAFB0B0B1B1B2B2B3B3B4B4B5B5B6B6B7
B7B8B8B9B9BABABABABBBBBCBCBDBDBEBE
>
<
20212123222424252526282729292A2A2B2B2D2E2E30303232333335373739383A3A3C3C3D3F3F41
414242444445454747484A4A4C4C4D4D4F4F5151525254565658585A5A5B5B5D5D5F5E6060626263
636565676769696A6A6C6C6E6E6F6F7171
>
0
0
<
5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534
33323231302F2E2D2C2B2A292827262524232221201F1E1D1C1C1B1A191817161514131211100F0F
0E0D0C0B0A090807070605040302020100
>
<
BDBCBCBBBBBABAB9B9B8B7B7B6B6B5B5B4B4B3B2B2B1B1B0B0AFAFAEADADACACABABAAAAA9A8A8A7
A7A6A6A5A5A4A4A3A3A2A1A1A0A09F9F9E9E9D9D9C9C9B9A9A999998989797969695959494939392
92919190908F8F8E8E8D8D8C8C8B8B8A8A
>
1
4 %_Br
<
BEBEBEBFBFBFBFBFBFC0C0C1C1C1C1C2C2C3C3C3C3C4C5C5C5C5C6C6C6C7C7C7C8C8C8C9C9C9CACA
CACBCBCCCCCCCDCDCDCECECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D4D5D5D5D6D6D6D7D7D7D8D8
D8D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDFDFDFE0E0E0E1E1E2E2E2E3
>
<
71717172727274747475757676787879797B7A7C7C7D7F7F80808182828385858687878889898A8C
8C8D8E8F8F909293939495969698999A9B9B9C9E9FA0A0A1A2A3A4A5A6A6A7A8A9A9ABABADADAEAF
AFB0B1B2B3B4B5B6B7B7B8B8B9BABBBBBCBDBEBEBFC0C1C2C3C3C4C5C6C6
>
0
0
<
00000000000000000000010101010101010101010101020202020202020202020303030303030303
03040404040404040404050505050505050506060606060606070707070707070708080808080808
090909090909090A0A0A0A0A0A0B0B0B0B0B0B0B0C0C0C0C0C0C0D0D0D0D
>
<
8A8A8A8989898888888787868685858484838382828180807F7F7E7D7D7C7B7B7A79797877777675
757473727271706F6F6E6D6C6C6B6A6968686766656464636261605F5E5E5D5C5B5A595857575655
54535251504F4E4D4C4C4B4A494847464544434241403F3E3D3C3B3A3938
>
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFCFBFBFBFBFAFAFAF9F9F9F9F8F8F8F7F7F7F6F6F6F5F5
F5F4F4F3F3F3F2F2F2F1F1F1F0F0EFEFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E8E8E8E7E7E6E6E5E5
E5E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7
>
4 %_Br
[
0 0 0 0 1 1 1 2 46.6667 9.4444 %_Bs
0.5294 0.1255 0 0 0.3569 0.7412 1 2 48.0769 43.3333 %_Bs
0.7451 0.4431 0 0 0 0.5412 1 2 59.6154 71.1111 %_Bs
0.8902 0.7765 0 0 0.051 0.2196 0.8431 2 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 82)
(Unnamed gradient 82) 0 3 Bd
[
<
000001010203040505060708090A0A0B0C0D0E101112131415161718191A1B1C1D1D1E1F20222324
252627282A2B2C2D2E2F3031323435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555658595A5B5D5E5F61626364666768696A6B6C6D6E6F70717172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A8A9A9AAAAABABACACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B2B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9B9BABABABABBBBBBBB
BCBCBCBDBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000001010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1A1B
1C1D1E1F1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616162636465666768
696A6A6B6C6D6D6E6F6F70717273747576767778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8E8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9A9AAAAAAAAABABABABABABAC
ACACACACACACACACADADADADADADADAD
>
<
00000001010202030304040506060708090A0A0B0C0D0E0F1011121213141516171718191A1B1C1D
1D1E1F20212222232425262728292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647494A4B4C4D4F50515253545556565758595A5B5C5D5E5E5F6061626364646566676768
696A6A6B6C6D6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919292929393949595969697979899999A9A9B9B9C9C
9D9D9E9E9F9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9A9AAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A7A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C5C7C8CACBCCCECFD0D2D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
<
BFBFBFBFBEBEBEBEBDBDBDBDBDBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B6B6B6B5B5
B5B4B4B4B3B3B2B2B2B2B1B1B1B1B0B0B0AFAFAEAEAEADADACACACABABAAAAA9A9A8A8A8A7A7A6A6
A5A5A4A4A3A3A2A2A1A0A09F9F9E9E9D9C9C9B9B9A999898979695959493929291908F8F8E8D8C8B
8A898988878685848483828281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867
66646362615F5E5D5B5A59585655545352504F4E4D4C4B4A48474645444341403F3E3D3C3B393837
3635343231302F2E2D2C2B2A28272625242322201F1E1D1D1C1B1A191817161514131211100E0D0C
0B0A0A09080706050504030201010000
>
<
ADADADADADADADADACACACACACACACACACABABABABABABAAAAAAAAA9A9A9A9A8A8A8A7A7A7A6A6A6
A5A5A4A4A4A3A3A3A2A2A1A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A99999898979797969595949392
929190908F8E8E8D8D8C8B8B8A89898887868685848383828181807F7E7E7D7C7B7A7A7978777676
7574737271706F6F6E6D6D6C6B6A6A69686766656463626161605F5E5D5C5B5A5A59585756555453
5251504F4E4D4C4B4A4847464544434241403F3E3D3C3B3A39383736353534333231302F2E2D2C2B
2A292827262524232221201F1F1E1D1C1B1A1A1918171615141413121110100F0E0D0D0C0B0A0A09
08070606050404030302020101000000
>
<
ABABABAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A7A7A7A7A7A7A6A6A6A6A6A5A5A5A5A5A4A4A4A3A3
A3A2A2A2A1A1A0A0A09F9F9F9E9E9D9D9C9C9B9B9A9A999998979796969595949393929292919190
908F8F8E8E8D8C8B8B8A8988888787868585848483828181807F7E7E7D7C7B7B7A79787877767575
7473727271706F6F6E6D6D6C6B6A6A6968676766656464636261605F5E5E5D5C5B5A595857565655
54535251504F4D4C4B4A4947464544434241403F3E3D3C3B3A39383837363534333231302F2E2D2C
2B2A29282726252423222221201F1E1D1D1C1B1A1918171716151413121211100F0E0D0C0B0A0A09
08070606050404030302020101000000
>
<
E6E5E4E3E2E0DFDEDDDCDBDAD9D8D7D5D4D3D2D0CFCECCCBCAC8C7C5C4C2C0BEBDBBB9B7B5B3B1AF
ADABA9A7A4A2A09E9C99979593908E8C89878583807E7C79777573716F6D6B69676563615F5D5C5A
58565453514F4D4C4A4846454341403E3D3B393836353332312F2E2C2B2A282725242221201E1D1C
1B1A19181716151413121110100F0E0D0C0B0A0A0908070706060505040403030303020202020101
01010101000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
[
0.749 0.6784 0.6706 0.902 0 0 0 2 50 100 %_Bs
0 0 0 0 1 1 1 2 50 40.45 %_Bs
0.749 0.6784 0.6706 0.902 0 0 0 2 50 1.1236 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
000001010203040505060708090A0A0B0C0D0E101112131415161718191A1B1C1D1D1E1F20222324
252627282A2B2C2D2E2F3031323435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555658595A5B5D5E5F61626364666768696A6B6C6D6E6F70717172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A8A9A9AAAAABABACACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B2B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9B9BABABABABBBBBBBB
BCBCBCBDBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000001010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1A1B
1C1D1E1F1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616162636465666768
696A6A6B6C6D6D6E6F6F70717273747576767778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8E8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9A9AAAAAAAAABABABABABABAC
ACACACACACACACACADADADADADADADAD
>
<
00000001010202030304040506060708090A0A0B0C0D0E0F1011121213141516171718191A1B1C1D
1D1E1F20212222232425262728292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647494A4B4C4D4F50515253545556565758595A5B5C5D5E5E5F6061626364646566676768
696A6A6B6C6D6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919292929393949595969697979899999A9A9B9B9C9C
9D9D9E9E9F9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9A9AAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A7A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C5C7C8CACBCCCECFD0D2D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.749 0.6784 0.6706 0.902 0 0 0 2 50 100 %_Bs
0 0 0 0 1 1 1 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0 0 1 Xa
 0 0 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d0 XR
40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.3882 0.6039 0.1529 Xa
 0.3882 0.6039 0.1529 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4039 0.4 0.0824 Xa
 0.4039 0.4 0.0824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8 0.8 0.1176 Xa
 0.8 0.8 0.1176 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0824 0.4157 0.1725 Xa
 0.0824 0.4157 0.1725 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Honeycomb)
(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [
%AI3_Tile
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
52.3345 28.1372 m
40.6475 21.3906 L
40.6475 7.9009 L
52.3345 1.1543 L
64.0161 7.9009 L
64.0161 21.3906 L
52.3345 28.1372 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
43.9536 19.4839 m
43.9536 9.8081 L
52.3345 4.9702 L
60.7153 9.8081 L
60.7153 19.4839 L
52.3345 24.3218 L
43.9536 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
25.7944 28.1406 m
14.1099 21.3911 L
14.1099 7.9014 L
25.7944 1.1548 L
37.479 7.9014 L
37.479 21.394 L
25.7944 28.1406 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
17.4126 19.4839 m
17.4126 9.8081 L
25.7944 4.9702 L
34.1743 9.8081 L
34.1743 19.4839 L
25.7944 24.3218 L
17.4126 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
12.6846 50.7852 m
1 44.0356 L
1 30.5459 L
12.6846 23.7993 L
24.3691 30.5459 L
24.3691 44.0386 L
12.6846 50.7852 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
4.3027 42.1284 m
4.3027 32.4526 L
12.6846 27.6147 L
21.0645 32.4526 L
21.0645 42.1284 L
12.6846 46.9663 L
4.3027 42.1284 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
65.603 51.1226 m
53.9185 44.3765 L
53.9185 30.8843 L
65.603 24.1382 L
77.2871 30.8843 L
77.2871 44.3774 L
65.603 51.1226 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
57.2202 42.4692 m
57.2202 32.7915 L
65.603 27.9536 L
73.9819 32.7915 L
73.9819 42.4692 L
65.603 47.3081 L
57.2202 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
39.0649 51.1235 m
27.3774 44.3765 L
27.3774 30.8843 L
39.0649 24.1382 L
50.7471 30.8843 L
50.7471 44.3774 L
39.0649 51.1235 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
30.6821 42.4692 m
30.6821 32.7915 L
39.0649 27.9517 L
47.4438 32.7915 L
47.4438 42.4702 L
39.0649 47.3091 L
30.6821 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
25.7944 74.1074 m
14.1099 67.3599 L
14.1099 53.8682 L
25.7944 47.1221 L
37.479 53.8682 L
37.479 67.3599 L
25.7944 74.1074 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
17.4126 65.4526 m
17.4126 55.7749 L
25.7944 50.937 L
34.1743 55.7749 L
34.1772 65.4526 L
25.7944 70.2905 L
17.4126 65.4526 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
52.3345 74.1074 m
40.6475 67.3599 L
40.6475 53.8682 L
52.3345 47.1221 L
64.0161 53.8682 L
64.0161 67.3599 L
52.3345 74.1074 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
43.9536 65.4526 m
43.9536 55.7749 L
52.3345 50.937 L
60.7153 55.7749 L
60.7153 65.4526 L
52.3345 70.2905 L
43.9536 65.4526 L
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Jungle Stripes)
(Jungle Stripes) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 0 0.5333 0.2157 Xa
 0 0.5333 0.2157 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d0 XR
37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
(0 O 0 R 0.6549 0.851 0.3412 Xa
 0.6549 0.851 0.3412 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 9 w 4 M []0 d0 XR
37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Mediterranean Tiles)
(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [
%AI3_Tile
(0 O 0 R 1 1 1 Xa
 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 1 Xa
 0 0 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 1 Xa
 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 1 Xa
 0 0 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 1 Xa
 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 1 Xa
 0 0 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 1 Xa
 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 1 Xa
 0 0 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.1216 0.1333 1 Xa
 0.1216 0.1333 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
43.6514 7.1123 m
43.6514 16.9727 L
33.7915 16.9727 L
33.7915 7.1123 L
43.6514 7.1123 L
f26.8296 23.9307 m
26.8296 33.791 L
16.9702 33.791 L
16.9702 23.9307 L
26.8296 23.9307 L
f10.0093 7.1094 m
10.0093 16.9697 L
0.1538 16.9697 L
0.1538 7.1094 L
10.0093 7.1094 L
f43.6494 40.752 m
43.6494 50.6113 L
33.7876 50.6113 L
33.7876 40.752 L
43.6494 40.752 L
f10.0083 40.749 m
10.0083 50.6084 L
0.1499 50.6084 L
0.1499 40.749 L
10.0083 40.749 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern Swatch 1)
(New Pattern Swatch 1) 0 0 9 9 [
%AI3_Tile
(0 O 0 R 0 0 0 Xa
 0 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
8.625 9 m
9 9 l
9 8.625 l
0.375 0 l
0 0 l
0 0.375 l
8.625 9 l
f0 9 m
0.375 9 l
0 8.625 l
0 9 l
f9 0.375 m
9 0 l
8.625 0 l
9 0.375 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern Swatch 2)
(New Pattern Swatch 2) 1 1 10 10 [
%AI3_Tile
(0 O 0 R 0 0 0 Xa
 0 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 10 m
1.5625 10 l
1 9.4375 l
1 10 l
f9.4375 1 m
10 1.5625 l
10 1 l
9.4375 1 l
f9.4375 10 m
10 10 l
10 9.4375 l
1.5625 1 l
1 1 l
1 1.5625 l
9.4375 10 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern Swatch 3)
(New Pattern Swatch 3) 1 1 10 10 [
%AI3_Tile
(0 O 0 R 0 0 0 Xa
 0 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 10 m
2.125 10 l
1 8.875 l
1 10 l
f8.875 1 m
10 2.125 l
10 1 l
8.875 1 l
f8.875 10 m
10 10 l
10 8.875 l
2.125 1 l
1 1 l
1 2.125 l
8.875 10 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern Swatch 4)
(New Pattern Swatch 4) 1 1 10 10 [
%AI3_Tile
(0 O 0 R 0 0 0 Xa
 0 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 10 m
1.5625 10 l
1 9.4375 l
1 10 l
f9.4375 10 m
10 10 l
10 9.4375 l
1.5625 1 l
1 1 l
1 1.5625 l
9.4375 10 l
f10 1.5625 m
10 1 l
9.4375 1 l
10 1.5625 l
f4.9375 10 m
6.0625 10 l
1 4.9375 l
1 6.0625 l
4.9375 10 l
f10 6.0625 m
10 4.9375 l
6.0625 1 l
4.9375 1 l
10 6.0625 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern Swatch 5)
(New Pattern Swatch 5) 1 1 10 10 [
%AI3_Tile
(0 O 0 R 0 0 0 Xa
 0 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1.375 10 m
1 10 l
1 9.625 l
9.625 1 l
10 1 l
10 1.375 l
1.375 10 l
f10 10 m
9.625 10 l
10 9.625 l
10 10 l
f1 1.375 m
1 1 l
1.375 1 l
1 1.375 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern Swatch 6)
(New Pattern Swatch 6) 1 1 10 10 [
%AI3_Tile
(0 O 0 R 0 0 0 Xa
 0 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
10 10 m
9.4375 10 l
10 9.4375 l
10 10 l
f1.5625 1 m
1 1.5625 l
1 1 l
1.5625 1 l
f1.5625 10 m
1 10 l
1 9.4375 l
9.4375 1 l
10 1 l
10 1.5625 l
1.5625 10 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern Swatch 7)
(New Pattern Swatch 7) 1 1 10 10 [
%AI3_Tile
(0 O 0 R 0 0 0 Xa
 0 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
10 10 m
8.875 10 l
10 8.875 l
10 10 l
f2.125 1 m
1 2.125 l
1 1 l
2.125 1 l
f2.125 10 m
1 10 l
1 8.875 l
8.875 1 l
10 1 l
10 2.125 l
2.125 10 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern Swatch 8)
(New Pattern Swatch 8) 1 1 10 10 [
%AI3_Tile
(0 O 0 R 0 0 0 Xa
 0 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
10 10 m
9.4375 10 l
10 9.4375 l
10 10 l
f1.5625 10 m
1 10 l
1 9.4375 l
9.4375 1 l
10 1 l
10 1.5625 l
1.5625 10 l
f1 1.5625 m
1 1 l
1.5625 1 l
1 1.5625 l
f6.0625 10 m
4.9375 10 l
10 4.9375 l
10 6.0625 l
6.0625 10 l
f1 6.0625 m
1 4.9375 l
4.9375 1 l
6.0625 1 l
1 6.0625 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern Swatch 9)
(New Pattern Swatch 9) 1 1 10 10 [
%AI3_Tile
(0 O 0 R 0 0 0 Xa
 0 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
9.625 10 m
10 10 l
10 9.625 l
1.375 1 l
1 1 l
1 1.375 l
9.625 10 l
f1 10 m
1.375 10 l
1 9.625 l
1 10 l
f10 1.375 m
10 1 l
9.625 1 l
10 1.375 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.8 0.8 0.8 Xa
 0.8 0.8 0.8 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.2 0.2 Xa
 0.2 0.2 0.2 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.6039 0.6 0.6 Xa
 0.6039 0.6 0.6 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4 0.4 0.4 Xa
 0.4 0.4 0.4 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Unnamed Pattern 2)
(Unnamed Pattern 2) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.3922 0.6039 0.1451 Xa
 0.3922 0.6039 0.1451 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4039 0.4 0.0745 Xa
 0.4039 0.4 0.0745 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8 0.8 0.1059 Xa
 0.8 0.8 0.1059 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0784 0.4157 0.1647 Xa
 0.0784 0.4157 0.1647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 Xa
([Registration]) Pc
1 1 1 Xa
(White) Pc
0 0 0 Xa
(Black) Pc
0.6 0.6 0.6 Xa
(Gray) Pc
0.8 0.8 0.8 Xa
(Light Gray) Pc
0 1 1 Xa
(Bright Blue) Pc
0.6 1 1 Xa
(Light Blue) Pc
0.8 1 1 Xa
(Pale Blue) Pc
1 0 1 Xa
(Violet) Pc
1 0.4 1 Xa
(Light Violet) Pc
1 0.8 1 Xa
(Pale Violet) Pc
1 1 0 Xa
(Yellow) Pc
1 1 0.4 Xa
(Light Yellow) Pc
1 1 0.6 Xa
(Pale Yellow) Pc
0.6 0.2 0 Xa
(Brown) Pc
0.8 0.4 0.2078 Xa
(Light Brown) Pc
1 0.5922 0.4 Xa
(Pale Brown) Pc
0 0 1 Xa
(Blue) Pc
0.4 0.4 1 Xa
(Faded Blue) Pc
0.8 0.8 1 Xa
(Faded Pale Blue) Pc
1 0 0 Xa
(Red) Pc
1 0.4 0.4 Xa
(Light Red) Pc
1 0.6 0.6 Xa
(Mauve) Pc
0 0.6 0 Xa
(Forest Green) Pc
0.2 0.8 0.2 Xa
(Green) Pc
0.6 1 0.4 Xa
(Pale Green) Pc
0 1 0 Xa
(Bright Green) Pc
0.4 1 0.4 Xa
(Light Bright Green) Pc
0.5922 1 0.6 Xa
(Pale Light Green) Pc
0.6 0 0.8 Xa
(Purple) Pc
0.6 0.4 0.8 Xa
(Periwinkle) Pc
0.8 0.6 0.8 Xa
(Lavender) Pc
1 0.6 0 Xa
(Orange) Pc
1 0.8 0.4 Xa
(Pale Orange) Pc
1 1 0.6 Xa
(Light Pale Orange) Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black) Pc
Bb
0 0 0 0 Bh
2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White Radial) Pc
Bb
2 (Copper ) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Copper ) Pc
Bb
2 (RGB Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(RGB Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Nova) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Nova) Pc
Bb
2 (Tropical Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Tropical Sunset) Pc
(Mediterranean Tiles) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Mediterranean Tiles) Pc
(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Pyramids) Pc
(Honeycomb) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Honeycomb) Pc
(Jungle Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Jungle Stripes) Pc
(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Camouflage) Pc
(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Azure Rings) Pc
(New Pattern Swatch 9) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern Swatch 9) Pc
(New Pattern Swatch 8) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern Swatch 8) Pc
(New Pattern Swatch 7) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern Swatch 7) Pc
(New Pattern Swatch 6) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern Swatch 6) Pc
(New Pattern Swatch 5) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern Swatch 5) Pc
(New Pattern Swatch 4) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern Swatch 4) Pc
(New Pattern Swatch 3) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern Swatch 3) Pc
(New Pattern Swatch 2) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern Swatch 2) Pc
(New Pattern Swatch 1) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern Swatch 1) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 255 79 79 Lb
(Layer 2) Ln
0 A
1 Ap
0 O
0.8275 g
0 J 0 j 1 w 4 M []0 d0 XR
353.415 340.1572 m
254.7793 340.1572 L
254.7793 393.1006 L
353.415 393.1006 L
353.415 340.1572 L
f0 Ap
0 R
0 0 0 XA
10 M283.4644 396.8506 m
283.4644 283.4648 L
S254.7793 340.1572 m
357.165 340.1572 L
S0 O
0 g
4 M353.5732 341.9766 m
362.7529 340.1406 l
353.5732 338.3047 l
355.4092 340.1406 l
353.5732 341.9766 l
f300.1035 313.6563 m
309.2832 311.8203 l
300.1035 309.9844 l
301.9395 311.8203 l
300.1035 313.6563 l
f299.7246 370.373 m
308.9043 368.5371 l
299.7246 366.7012 l
301.5605 368.5371 l
299.7246 370.373 l
f281.6011 393.4609 m
283.437 402.6406 l
285.2729 393.4609 l
283.437 395.2969 l
281.6011 393.4609 l
f/BBAccumRotation (1.570796) XT
0 R
0 G
10 M260.7876 311.8115 m
306.1416 311.8115 L
S260.7876 368.5039 m
306.1416 368.5039 L
SLB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 2 79 255 79 Lb
(Layer 3) Ln
0 A
0 To
1 0 0 1 357.25 336.3896 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
0 J 0 j 1 w 4 M []0 d0 XR
%_ 0 50 XQ
/_ArialMT.WinCyrillic 12 12 -3.8965 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
1 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(x) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 286 397.8896 0 Tp
0 Tv
TP
0 Tr
(z) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 311 368.6396 0 Tp
0 Tv
TP
0 Tr
(b) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 311 311.6396 0 Tp
0 Tv
TP
0 Tr
(a) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
